// <auto-generated />
using System;
using AdoptionHub.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdoptionHub.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241103185343_user-add-salt-increase-password-length")]
    partial class useraddsaltincreasepasswordlength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AdoptionHub.Models.Adoptionapplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdopterId")
                        .HasColumnType("int")
                        .HasColumnName("adopterId");

                    b.Property<DateOnly?>("ApplicationDate")
                        .HasColumnType("date")
                        .HasColumnName("applicationDate");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("applicationStatus");

                    b.Property<int?>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("petId");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AdopterId" }, "adopterId");

                    b.HasIndex(new[] { "PetId" }, "petId");

                    b.ToTable("adoptionapplications", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("appointmentDate");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("createdByUserId");

                    b.Property<int?>("FosterUserId")
                        .HasColumnType("int")
                        .HasColumnName("fosterUserId");

                    b.Property<int?>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("petId");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CreatedByUserId" }, "createdByUserId");

                    b.HasIndex(new[] { "FosterUserId" }, "fosterUserId");

                    b.HasIndex(new[] { "PetId" }, "petId")
                        .HasDatabaseName("petId1");

                    b.ToTable("appointments", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Fosterassignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<int?>("FosterId")
                        .HasColumnType("int")
                        .HasColumnName("fosterId");

                    b.Property<int?>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("petId");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FosterId" }, "fosterId");

                    b.HasIndex(new[] { "PetId" }, "petId")
                        .HasDatabaseName("petId2");

                    b.ToTable("fosterassignments", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("message");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("loginlogs", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Medicalrecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HealthStatus")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("healthStatus");

                    b.Property<bool?>("IsNeutered")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isNEUTERED");

                    b.Property<bool?>("IsVaccinated")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isVaccinated");

                    b.Property<int?>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("petId");

                    b.Property<string>("SpecialNeeds")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("specialNeeds");

                    b.Property<int?>("VetId")
                        .HasColumnType("int")
                        .HasColumnName("vetId");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("visitDate");

                    b.Property<string>("VisitDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("visitDescription");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PetId" }, "petId")
                        .HasDatabaseName("petId3");

                    b.HasIndex(new[] { "VetId" }, "vetId");

                    b.ToTable("medicalrecords", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CurrentFosterAssignmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FosterParentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CurrentFosterAssignmentId" }, "IX_pets_CurrentFosterAssignmentId");

                    b.HasIndex(new[] { "FosterParentId" }, "IX_pets_FosterParentId");

                    b.ToTable("pets", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.PetDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("AdoptionFee")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("adoptionFee");

                    b.Property<string>("Bio")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("bio");

                    b.Property<string>("Breed")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("breed");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<DateOnly?>("DateArrived")
                        .HasColumnType("date")
                        .HasColumnName("dateArrived");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("gender")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Species")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("species");

                    b.Property<string>("Temperament")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("temperament");

                    b.Property<float?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("petdetails", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Petimage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imageUrl");

                    b.Property<int?>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("petId");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PetId" }, "petId")
                        .HasDatabaseName("petId4");

                    b.ToTable("petimages", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.SignupCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("SignupCodes");
                });

            modelBuilder.Entity("AdoptionHub.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("lastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("salt");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("userRole");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Username" }, "username")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Vetappointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApptDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("apptDate");

                    b.Property<string>("ApptReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("apptReason");

                    b.Property<int?>("FosterId")
                        .HasColumnType("int")
                        .HasColumnName("fosterId");

                    b.Property<bool?>("IsFostered")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isFostered");

                    b.Property<int?>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("petId");

                    b.Property<int?>("VetId")
                        .HasColumnType("int")
                        .HasColumnName("vetId");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FosterId" }, "FK_VetAppointments_FosterId");

                    b.HasIndex(new[] { "PetId" }, "FK_VetAppointments_PetId");

                    b.HasIndex(new[] { "VetId" }, "FK_VetAppointments_VetId");

                    b.ToTable("vetappointments", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Veterinarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("lastName");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("phoneNumber");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("veterinarian", (string)null);
                });

            modelBuilder.Entity("AdoptionHub.Models.Adoptionapplication", b =>
                {
                    b.HasOne("AdoptionHub.Models.User", "Adopter")
                        .WithMany("Adoptionapplications")
                        .HasForeignKey("AdopterId")
                        .HasConstraintName("AdoptionApplications_ibfk_1");

                    b.HasOne("AdoptionHub.Models.Pet", "Pet")
                        .WithMany("Adoptionapplications")
                        .HasForeignKey("PetId")
                        .HasConstraintName("AdoptionApplications_ibfk_2");

                    b.Navigation("Adopter");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("AdoptionHub.Models.Appointment", b =>
                {
                    b.HasOne("AdoptionHub.Models.User", "CreatedByUser")
                        .WithMany("AppointmentCreatedByUsers")
                        .HasForeignKey("CreatedByUserId")
                        .HasConstraintName("Appointments_ibfk_1");

                    b.HasOne("AdoptionHub.Models.User", "FosterUser")
                        .WithMany("AppointmentFosterUsers")
                        .HasForeignKey("FosterUserId")
                        .HasConstraintName("Appointments_ibfk_2");

                    b.HasOne("AdoptionHub.Models.Pet", "Pet")
                        .WithMany("Appointments")
                        .HasForeignKey("PetId")
                        .HasConstraintName("Appointments_ibfk_3");

                    b.Navigation("CreatedByUser");

                    b.Navigation("FosterUser");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("AdoptionHub.Models.Fosterassignment", b =>
                {
                    b.HasOne("AdoptionHub.Models.User", "Foster")
                        .WithMany("Fosterassignments")
                        .HasForeignKey("FosterId")
                        .HasConstraintName("FosterAssignments_ibfk_1");

                    b.HasOne("AdoptionHub.Models.Pet", "Pet")
                        .WithMany("Fosterassignments")
                        .HasForeignKey("PetId")
                        .HasConstraintName("FosterAssignments_ibfk_2");

                    b.Navigation("Foster");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("AdoptionHub.Models.Medicalrecord", b =>
                {
                    b.HasOne("AdoptionHub.Models.Pet", "Pet")
                        .WithMany("Medicalrecords")
                        .HasForeignKey("PetId")
                        .HasConstraintName("MedicalRecords_ibfk_1");

                    b.HasOne("AdoptionHub.Models.Veterinarian", "Vet")
                        .WithMany("Medicalrecords")
                        .HasForeignKey("VetId")
                        .HasConstraintName("MedicalRecords_ibfk_2");

                    b.Navigation("Pet");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("AdoptionHub.Models.Pet", b =>
                {
                    b.HasOne("AdoptionHub.Models.Fosterassignment", "CurrentFosterAssignment")
                        .WithMany()
                        .HasForeignKey("CurrentFosterAssignmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoptionHub.Models.User", "FosterParent")
                        .WithMany("Pets")
                        .HasForeignKey("FosterParentId");

                    b.Navigation("CurrentFosterAssignment");

                    b.Navigation("FosterParent");
                });

            modelBuilder.Entity("AdoptionHub.Models.PetDetail", b =>
                {
                    b.HasOne("AdoptionHub.Models.Pet", "Pet")
                        .WithOne("Details")
                        .HasForeignKey("AdoptionHub.Models.PetDetail", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("AdoptionHub.Models.Petimage", b =>
                {
                    b.HasOne("AdoptionHub.Models.Pet", "Pet")
                        .WithMany("Petimages")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("petimages_ibfk_1");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("AdoptionHub.Models.Vetappointment", b =>
                {
                    b.HasOne("AdoptionHub.Models.User", "Foster")
                        .WithMany("Vetappointments")
                        .HasForeignKey("FosterId")
                        .HasConstraintName("FK_VetAppointments_FosterId");

                    b.HasOne("AdoptionHub.Models.Pet", "Pet")
                        .WithMany("Vetappointments")
                        .HasForeignKey("PetId")
                        .HasConstraintName("FK_VetAppointments_PetId");

                    b.HasOne("AdoptionHub.Models.Veterinarian", "Vet")
                        .WithMany("Vetappointments")
                        .HasForeignKey("VetId")
                        .HasConstraintName("FK_VetAppointments_VetId");

                    b.Navigation("Foster");

                    b.Navigation("Pet");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("AdoptionHub.Models.Pet", b =>
                {
                    b.Navigation("Adoptionapplications");

                    b.Navigation("Appointments");

                    b.Navigation("Details");

                    b.Navigation("Fosterassignments");

                    b.Navigation("Medicalrecords");

                    b.Navigation("Petimages");

                    b.Navigation("Vetappointments");
                });

            modelBuilder.Entity("AdoptionHub.Models.User", b =>
                {
                    b.Navigation("Adoptionapplications");

                    b.Navigation("AppointmentCreatedByUsers");

                    b.Navigation("AppointmentFosterUsers");

                    b.Navigation("Fosterassignments");

                    b.Navigation("Pets");

                    b.Navigation("Vetappointments");
                });

            modelBuilder.Entity("AdoptionHub.Models.Veterinarian", b =>
                {
                    b.Navigation("Medicalrecords");

                    b.Navigation("Vetappointments");
                });
#pragma warning restore 612, 618
        }
    }
}
